language: go
go:
- 1.x
before_script:
  - go vet ./...
install:
- go get github.com/atotto/clipboard
- go get github.com/fatih/color
gobuild_args: -i -race -v --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool

script:
 - go test -v ./...

before_deploy:
  - mkdir release
  - cp README.md README.txt
  - 'GOARCH=386 GOOS=linux go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-linux-i386.tar.gz epochtool README.txt'
  - 'GOARCH=amd64 GOOS=linux go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-linux-amd64.tar.gz epochtool README.txt'
  - 'GOARCH=arm GOOS=linux go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-linux-arm.tar.gz epochtool README.txt'
  - 'GOARCH=386 GOOS=freebsd go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-freebsd-i386.tar.gz epochtool README.txt'
  - 'GOARCH=amd64 GOOS=freebsd go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-freebsd-amd64.tar.gz epochtool README.txt'
  - 'GOARCH=arm GOOS=freebsd go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-freebsd-arm.tar.gz epochtool README.txt'
  - 'GOARCH=386 GOOS=darwin go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-darwin-i386.tar.gz epochtool README.txt'
  - 'GOARCH=arm GOOS=darwin go build -o epochtool --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && tar -zcf release/epochtool-darwin-amd64.tar.gz epochtool README.txt'
  - unix2dos -n README.md README.txt
  - 'GOARCH=386 GOOS=windows go build -o epochtool.exe --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && zip release/epochtool-windows-i386.zip epochtool.exe README.txt'
  - 'GOARCH=amd64 GOOS=windows go build -o epochtool.exe --ldflags "-X \"main.Version=$(git describe --tags --long)\"" ./cmd/epochtool && zip release/epochtool-windows-amd64.zip epochtool.exe README.txt'

addons:
  apt:
    packages:
      - dos2unix
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: jRuGPnYAyipvF27WLrgkdVSEkTV7A0x+4DFiJ9+lUWKGcyUJeNOpLHyZcKaqoMhXBdy9T0gINhsjn+uVUpyesQ+8A+GItEqppYBoVJUpDKH4jV/g9o7zhNxDixMssUrcTxk8qNkxs2WUAuMKi+dfXYAVmmkfXcHoHdmk/U5BZ6BrJaorFTYXyFRSzBlArVLZ/CZct+9vS3y71NWAn9Cem4Y/zTlpHN02mGx4xIcDcSWqftupew8eazd7FqnlZPnNlSn3O7eO4V5clInljEeFHY2/+wmUjUUjJ9iE2Pi7TeFQGeDMK5wn5Cz60hlY0STO5SBFXCPyJIV+cV9sHh67Cd4TCcVMlE3jznEa4OqJxE5mUw/isgQML6FsU6StG4TyM/nY3drL5ODbKmFmDLKA3gYzOMjjuKoxJQh46FQ1PrJ8UfH7ytgZIQMoZlxLL6oVHJHseZap1Y2z5eE888s1FlOL8SXmzjNAbZ0whU4KpclkhSyK85rNKbU/Be7MDKCqw3jIHt2TTUGZ28+ATrz8lh6mV6jPiQKJkAJEo5QiR9mKpEgQTbMtq3J/wKrOOZ23NxQqyb+N/t93PVVpB4IcMQb1VElKxZV2O01fa+X85OO74cFUQyz5IX2ChLaipTEl70nNtuuU8Xn6b78WnLf5HaqdzCBSmtuSD+7Qrvfhy6U=
  file:
    - "release/epochtool-linux-i386.tar.gz"
    - "release/epochtool-linux-amd64.tar.gz"
    - "release/epochtool-linux-arm.tar.gz"
    - "release/epochtool-freebsd-i386.tar.gz"
    - "release/epochtool-freebsd-amd64.tar.gz"
    - "release/epochtool-freebsd-arm.tar.gz"
    - "release/epochtool-darwin-i386.tar.gz"
    - "release/epochtool-darwin-amd64.tar.gz"
    - "release/epochtool-windows-i386.zip"
    - "release/epochtool-windows-amd64.zip"
  on:
    tags: true
  overwrite: true
